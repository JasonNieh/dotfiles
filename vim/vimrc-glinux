set nocompatible
set mouse=a

filetype off

" set the runtime path to include Vundle and initialize
set runtimepath^=~/.vim/bundle/bbye
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
  " let Vundle manage Vundle, required
  Plugin 'VundleVim/Vundle.vim'

  Plugin 'benmills/vimux'
  Plugin 'christoomey/vim-tmux-navigator'
  Plugin 'scrooloose/nerdcommenter'
  Plugin 'Valloric/MatchTagAlways'
  Plugin 'tpope/vim-sensible'
  Plugin 'SirVer/ultisnips'

  " Snippets for ultisnips are separated from the engine. keep as last.
  Plugin 'honza/vim-snippets'
" All of your Plugins must be added before the following line
call vundle#end()            " required

" Load the default google configuration
source /usr/share/vim/google/google.vim

" syntax highlighting
syntax on
" use » to mark Tabs and ° to mark trailing whitespace. This is a
" non-obtrusive way to mark these special characters.
set list listchars=tab:»\ ,trail:°

" Highlight the search term when you search for it.
set hlsearch

" By default, it looks up man pages for the word under the cursor, which isn't
" very useful, so we map it to something else.
nnoremap <s-k> <CR>

set expandtab
set tabstop=2
set shiftwidth=2
set textwidth=80

" set UTF-8 encoding
set enc=utf-8
set fenc=utf-8
set termencoding=utf-8

" use indentation of previous line
set autoindent

" use intelligent indentation for C
set smartindent

" turn syntax highlighting on
set t_Co=256

" turn line numbers on
set number

" highlight matching braces
set showmatch

" intelligent comments
set comments=sl:/*,mb:\ *,elx:\ */

" \v to generate new vertical split
nnoremap <leader>v :vsplit<CR>
" \s to generate new vertical split
nnoremap <leader>s :split<CR>
" \e to explore
nnoremap <leader>e :Explore<CR>

" \q to close buffer
nnoremap <Leader>q :Bdelete<CR>

" Prompt for a command to run
map <Leader>vp :VimuxPromptCommand<CR>
" Run last command executed by VimuxRunCommand
map <Leader>vl :VimuxRunLastCommand<CR>
" Zoom the tmux runner pane
map <Leader>vz :VimuxZoomRunner<CR>
set mouse=a

" Plugin configuration.
" See http://google3/devtools/editors/vim/examples/ for example configurations
" and http://go/vim/plugins for more information about vim plugins at Google.

" Plugin loading is commented out below - uncomment the plugins you'd like to
" load.

" Load google's formatting plugins (http://go/vim/plugins/codefmt-google).
" The default mapping is \= (or <leader>= if g:mapleader has a custom value),
" with
" - \== formatting the current line or selected lines in visual mode
"   (:FormatLines).
" - \=b formatting the full buffer (:FormatCode).
"
" To bind :FormatLines to the same key in insert and normal mode, add:
"   noremap <C-K> :FormatLines<CR>
"   inoremap <C-K> <C-O>:FormatLines<CR>
Glug codefmt
Glug codefmt-google
Glug codefmt plugin[mappings] gofmt_executable="goimports"
autocmd FileType bzl AutoFormatBuffer buildifier
autocmd FileType go AutoFormatBuffer gofmt
autocmd FileType c,cpp,proto,javascript AutoFormatBuffer clang-format
autocmd FileType java AutoFormatBuffer google-java-format
autocmd FileType jslayout AutoFormatBuffer jslfmt
autocmd FileType go AutoFormatBuffer gofmt
autocmd FileType python AutoFormatBuffer pyformat

" Load YCM (http://go/ycm) for semantic auto-completion and quick syntax
" error checking. Pulls in a google3-enabled version of YCM itself and
" a google3-specific default configuration.
Glug youcompleteme-google

" Load piper integration (http://wiki/Main/VimPerforce).
Glug piper plugin[mappings]

" :PiperSelectActiveFiles comes by default from google.vim. It's so useful that
" we map it to <leader>p (i.e., ,p).
" Use :h piper for more details about the piper integration
noremap <unique> <leader>p :PiperSelectActiveFiles<CR>

" Load the blaze plugins, with the ,b prefix on all commands.
" Thus, to Blaze build, you can do <leader>bb.
" Since we've set the mapleader to ',' above, this should be ,bb in practice
Glug blaze plugin[mappings]='<leader>b'

Glug g4

Glug relatedfiles
nnoremap <unique> <leader>rf :RelatedFilesWindow<CR>

" Load the automated blaze dependency integration for Go.
" Note: for Go, blazedeps uses the Go team's glaze tool, which is fully
" supported by the Go team; for other languages. Note that the plugin is
" currently unsupported for other languages.
Glug blazedeps auto_filetypes=`['go']`

" Load the Critique integration. Use :h critique for more details.
Glug critique plugin[mappings]

" Load the syntastic plugin (http://go/vim/plugins/syntastic-google).
" Note: this requires installing the upstream syntastic plugin from
" https://github.com/scrooloose/syntastic.
Glug syntastic-google

" Load the ultisnips plugin (http://go/ultisnips).
" Note: this requires installing the upstream ultisnips plugin from
" https://github.com/SirVer/ultisnips.
Glug ultisnips-google

Glug corpweb
" All of your plugins must be added before the following line.
filetype plugin indent on
syntax on

